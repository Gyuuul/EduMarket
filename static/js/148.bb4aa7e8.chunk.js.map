{"version":3,"file":"static/js/148.bb4aa7e8.chunk.js","mappings":"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","sources":["pages/login/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { URL } from '../../lib/apis/constant/path'\r\nimport getMyInfo from './getMyInfo'\r\nimport { setMyInfo } from '../../store/slice/userSlice';\r\nimport LoginHeader from '../../components/header/LoginHeader';\r\n\r\nexport default function Login() {\r\n    const [email, setEmail] = useState(undefined);\r\n    const [password, setPassword] = useState(undefined);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const navigate= useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    // 이메일, 비밀번호 작성되면 버튼 활성화\r\n    useEffect(() => {\r\n        if (email && password) {\r\n            setIsActive(true);\r\n            } else {\r\n            setIsActive(false);\r\n            }\r\n        }, [email, password]);\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        // 로그인 유효성 검사\r\n            if(isActive===true){\r\n                try{\r\n                    const res= await axios.post(`${URL}/user/login`,{\r\n                        headers: {\r\n                            'Content-type': 'application/json',\r\n                            },\r\n                            user: {\r\n                                email,\r\n                                password,\r\n                            },\r\n                    });\r\n                    if(res.data.message === '이메일 또는 비밀번호가 일치하지 않습니다.'){\r\n                        setMessage('이메일 또는 비밀번호가 일치하지 않습니다.');\r\n                    }\r\n                    else{\r\n                        // 토큰 검증\r\n                        try {\r\n                            await axios.get(`${URL}/user/checktoken`, {\r\n                                headers: {\r\n                                    Authorization: `Bearer ${res.data.user.token}`,\r\n                                    'Content-type': 'application/json',\r\n                                },\r\n                        })\r\n                        //토큰 검증 성공 후 token, accountname 저장\r\n                        .then((data) => {\r\n                            if (data.data.isValid) {\r\n                                setMessage('');\r\n                                localStorage.setItem('Access Token', res.data.user.token);\r\n                                localStorage.setItem('Account Name', res.data.user.accountname);\r\n                                navigate('/home');\r\n                                } \r\n                            else {\r\n                                alert('유효하지 않은 접근입니다');\r\n                                }\r\n                            })\r\n                            .catch((error) => {\r\n                                console.log(error);\r\n                            });\r\n                        }   \r\n                        catch(error){\r\n                            console.log(error);\r\n                        }\r\n                    }\r\n                }\r\n                catch(error){\r\n                    console.log(error);\r\n                }\r\n            }\r\n            const user= await getMyInfo();\r\n            dispatch(setMyInfo(user));\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <LoginHeader/>\r\n            <Form>\r\n                <Title>\r\n                    <H2>로그인</H2>\r\n                </Title>\r\n\r\n                <InputDiv>\r\n                    <Div>\r\n                        <Label htmlFor=\"email\">\r\n                            이메일\r\n                        </Label>\r\n                        <Input\r\n                            id=\"email\"\r\n                            type=\"text\"\r\n                            placeholder=\" \"\r\n                            onChange={(e) => {\r\n                                setEmail(e.target.value);\r\n                            }}\r\n                        />\r\n                    </Div>\r\n\r\n                    <Div>\r\n                        <Label htmlFor=\"password\">\r\n                            비밀번호\r\n                        </Label>\r\n                        <Input\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\" \"\r\n                            onChange={(e) => {\r\n                                setPassword(e.target.value);\r\n                            }}\r\n                        />\r\n                        <p>{message}</p> \r\n                    </Div>\r\n                </InputDiv>\r\n\r\n                <Div>\r\n                    <Button onClick={handleSubmit} aria-label=\"로그인\">로그인</Button>\r\n                    <SignupDiv>\r\n                        <span>에듀켓의 회원이 아니신가요?</span>\r\n                        <SignupLink to={'/signup'}>회원가입</SignupLink>\r\n                    </SignupDiv>\r\n                </Div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\nconst Form= styled.form`\r\n    width: 600px;\r\n    margin: 0 auto;\r\n    padding: 30px;\r\n`\r\nconst Title= styled.div`\r\n    margin: 0 0 40px 0;\r\n    font-size: 15px;\r\n    text-align: center;\r\n    color: #2b2b2b;\r\n    border: none;\r\n    padding-bottom: 0;\r\n`\r\nconst H2= styled.h2`\r\n    font-family: \"Noto_Sans_KR-600\";\r\n    display: inline-block;\r\n    color: #2b2b2b;\r\n`\r\nconst Div= styled.div`\r\n    width: 445px;\r\n    margin: 0 auto;\r\n    & p{\r\n        font-family: \"Noto_Sans_KR-400\";\r\n        font-size: 14px;\r\n        color: #C63D2F;\r\n        margin-bottom: 30px;    \r\n    }\r\n`\r\nconst InputDiv= styled.div`\r\n    margin-top: 50px;\r\n    margin-bottom: 30px;\r\n`\r\nconst Label= styled.label`\r\n    font-family: \"Noto_Sans_KR-400\";\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #101010;\r\n`\r\nconst Input= styled.input`\r\n    font-family: \"Noto_Sans_KR-400\";\r\n    height: 38px;\r\n    line-height: 38px;\r\n    background-color: transparent;\r\n    border: 1px solid #A73121;\r\n    border-left: none;\r\n    border-right: none;\r\n    border-top: none;\r\n    margin: 5px 0 15px 0;\r\n    padding: 5px 5px;\r\n    width: calc(100% - 10px);\r\n    outline: none;\r\n`\r\nconst Button= styled.button`\r\n    font-family: \"Noto_Sans_KR-400\";\r\n    width: 445px;\r\n    margin-bottom: 20px;\r\n    height: 60px;\r\n    line-height: 60px;\r\n    background: #C63D2F;\r\n    border: 1px solid #C63D2F;\r\n    border-radius: 5px;\r\n    color: #fff;\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n`\r\nconst SignupDiv= styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    & span {\r\n        font-family: \"Noto_Sans_KR-400\";\r\n        font-size: 15px;\r\n        color: #101010;\r\n    }\r\n`\r\nconst SignupLink = styled(Link)`\r\n    font-family: \"Noto_Sans_KR-400\";\r\n    color: #101010;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n`"],"names":["Login","_useState","useState","undefined","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","isActive","setIsActive","_useState7","_useState8","message","setMessage","navigate","useNavigate","dispatch","useDispatch","_handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","res","user","wrap","_context","prev","next","preventDefault","axios","post","concat","URL","headers","sent","data","get","Authorization","token","then","isValid","localStorage","setItem","accountname","alert","catch","error","console","log","t0","t1","getMyInfo","setMyInfo","stop","apply","arguments","useEffect","_jsxs","_Fragment","children","_jsx","LoginHeader","Form","Title","H2","InputDiv","Div","Label","htmlFor","Input","id","type","placeholder","onChange","target","value","Button","onClick","_x","SignupDiv","SignupLink","to","styled","form","_templateObject","_taggedTemplateLiteral","div","_templateObject2","h2","_templateObject3","_templateObject4","_templateObject5","label","_templateObject6","input","_templateObject7","button","_templateObject8","_templateObject9","Link","_templateObject10"],"sourceRoot":""}